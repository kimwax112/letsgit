{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\components\\\\TextInputUI\\\\TextInputUI.jsx\";\n// TextInputUI.jsx\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width:100%;\n  max-width: 500px;\n  border: 1px solid #ccc;\n  padding: 5px;\n  border-radius: 10px;\n  background-color: white;\n`;\n_c = InputContainer;\nconst InputBox = styled.input`\n  flex: 1;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  background-color: white;\n`;\n_c2 = InputBox;\nconst Counter = styled.p`\n  font-size: 14px;\n  color: ${props => props.isMax ? \"red\" : \"#666\"};\n  margin-left: 10px;\n  white-space: nowrap;\n`;\n_c3 = Counter;\nconst TextInputUI = ({\n  value,\n  maxLength,\n  onChange,\n  onEnter,\n  onCompositionStart,\n  onCompositionEnd,\n  ...props\n}) => {\n  const inputValue = value !== null && value !== void 0 ? value : \"\";\n  const length = inputValue.length;\n  const handleKeyDown = e => {\n    // IME(한글 조합) 중일 때는 Enter 처리를 막음\n    if (e.key === \"Enter\" && !e.nativeEvent.isComposing) {\n      if (onEnter) {\n        onEnter(inputValue);\n        e.preventDefault();\n      }\n    }\n    // 전달된 onKeyDown 호출\n    if (props.onKeyDown) {\n      props.onKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(InputBox, {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange,\n      onKeyDown: handleKeyDown,\n      maxLength: maxLength // 기본 글자 수 제한 (IME 조합 시 이슈가 있을 수 있음)\n      ,\n      onCompositionStart: onCompositionStart,\n      onCompositionEnd: onCompositionEnd,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      isMax: length === maxLength,\n      children: [length, \" / \", maxLength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c4 = TextInputUI;\nexport default TextInputUI;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"InputBox\");\n$RefreshReg$(_c3, \"Counter\");\n$RefreshReg$(_c4, \"TextInputUI\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","InputContainer","div","_c","InputBox","input","_c2","Counter","p","props","isMax","_c3","TextInputUI","value","maxLength","onChange","onEnter","onCompositionStart","onCompositionEnd","inputValue","length","handleKeyDown","e","key","nativeEvent","isComposing","preventDefault","onKeyDown","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/components/TextInputUI/TextInputUI.jsx"],"sourcesContent":["// TextInputUI.jsx\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width:100%;\r\n  max-width: 500px;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst InputBox = styled.input`\r\n  flex: 1;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: white;\r\n`;\r\n\r\nconst Counter = styled.p`\r\n  font-size: 14px;\r\n  color: ${(props) => (props.isMax ? \"red\" : \"#666\")};\r\n  margin-left: 10px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst TextInputUI = ({\r\n  value,\r\n  maxLength,\r\n  onChange,\r\n  onEnter,\r\n  onCompositionStart,\r\n  onCompositionEnd,\r\n  ...props\r\n}) => {\r\n  const inputValue = value ?? \"\";\r\n  const length = inputValue.length;\r\n\r\n  const handleKeyDown = (e) => {\r\n    // IME(한글 조합) 중일 때는 Enter 처리를 막음\r\n    if (e.key === \"Enter\" && !e.nativeEvent.isComposing) {\r\n      if (onEnter) {\r\n        onEnter(inputValue);\r\n        e.preventDefault();\r\n      }\r\n    }\r\n    // 전달된 onKeyDown 호출\r\n    if (props.onKeyDown) {\r\n      props.onKeyDown(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <InputBox\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={onChange}\r\n        onKeyDown={handleKeyDown}\r\n        maxLength={maxLength} // 기본 글자 수 제한 (IME 조합 시 이슈가 있을 수 있음)\r\n        onCompositionStart={onCompositionStart}\r\n        onCompositionEnd={onCompositionEnd}\r\n        \r\n        {...props}\r\n      />\r\n      <Counter isMax={length === maxLength}>\r\n        {length} / {maxLength}\r\n      </Counter>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default TextInputUI;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,cAAc;AAWpB,MAAMG,QAAQ,GAAGN,MAAM,CAACO,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,QAAQ;AASd,MAAMG,OAAO,GAAGT,MAAM,CAACU,CAAC;AACxB;AACA,WAAYC,KAAK,IAAMA,KAAK,CAACC,KAAK,GAAG,KAAK,GAAG,MAAO;AACpD;AACA;AACA,CAAC;AAACC,GAAA,GALIJ,OAAO;AAOb,MAAMK,WAAW,GAAGA,CAAC;EACnBC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACRC,OAAO;EACPC,kBAAkB;EAClBC,gBAAgB;EAChB,GAAGT;AACL,CAAC,KAAK;EACJ,MAAMU,UAAU,GAAGN,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE;EAC9B,MAAMO,MAAM,GAAGD,UAAU,CAACC,MAAM;EAEhC,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3B;IACA,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,WAAW,CAACC,WAAW,EAAE;MACnD,IAAIT,OAAO,EAAE;QACXA,OAAO,CAACG,UAAU,CAAC;QACnBG,CAAC,CAACI,cAAc,CAAC,CAAC;MACpB;IACF;IACA;IACA,IAAIjB,KAAK,CAACkB,SAAS,EAAE;MACnBlB,KAAK,CAACkB,SAAS,CAACL,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,cAAc;IAAA2B,QAAA,gBACb5B,OAAA,CAACI,QAAQ;MACPyB,IAAI,EAAC,MAAM;MACXhB,KAAK,EAAEM,UAAW;MAClBJ,QAAQ,EAAEA,QAAS;MACnBY,SAAS,EAAEN,aAAc;MACzBP,SAAS,EAAEA,SAAU,CAAC;MAAA;MACtBG,kBAAkB,EAAEA,kBAAmB;MACvCC,gBAAgB,EAAEA,gBAAiB;MAAA,GAE/BT;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACFjC,OAAA,CAACO,OAAO;MAACG,KAAK,EAAEU,MAAM,KAAKN,SAAU;MAAAc,QAAA,GAClCR,MAAM,EAAC,KAAG,EAACN,SAAS;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB,CAAC;AAACC,GAAA,GA5CItB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAT,EAAA,EAAAG,GAAA,EAAAK,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}