{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\components\\\\ColorPicker\\\\FixedColorPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BlockPicker } from \"react-color\";\nimport \"./FixedColorPicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorLabels = {\n  \"#ff0000\": \"빨강\",\n  \"#00ff00\": \"초록\",\n  \"#0000ff\": \"파랑\",\n  \"#ff9900\": \"주황\",\n  \"#0099ff\": \"하늘\"\n};\nconst FixedColorPicker = ({\n  initialColor = \"#ff0000\",\n  onColorChange,\n  presetColors = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#ff9900\", \"#0099ff\"]\n}) => {\n  _s();\n  var _colorLabels$color;\n  const [color, setColor] = useState(initialColor);\n  const handleChangeComplete = colorResult => {\n    setColor(colorResult.hex);\n    if (onColorChange) {\n      onColorChange(colorResult.hex);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-picker-container\",\n    children: [/*#__PURE__*/_jsxDEV(BlockPicker, {\n      className: \"custom-block-picker\",\n      width: 120,\n      color: color,\n      colors: presetColors,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-label\",\n      children: (_colorLabels$color = colorLabels[color]) !== null && _colorLabels$color !== void 0 ? _colorLabels$color : color /* 색상 이름 매핑, 없으면 hex */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FixedColorPicker, \"q0djP7XCOd5Pq4PyR76fwDKn54w=\");\n_c = FixedColorPicker;\nexport default FixedColorPicker;\nvar _c;\n$RefreshReg$(_c, \"FixedColorPicker\");","map":{"version":3,"names":["React","useState","BlockPicker","jsxDEV","_jsxDEV","colorLabels","FixedColorPicker","initialColor","onColorChange","presetColors","_s","_colorLabels$color","color","setColor","handleChangeComplete","colorResult","hex","className","children","width","colors","onChangeComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/components/ColorPicker/FixedColorPicker.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport \"./FixedColorPicker.css\";\r\n\r\nconst colorLabels = {\r\n  \"#ff0000\": \"빨강\",\r\n  \"#00ff00\": \"초록\",\r\n  \"#0000ff\": \"파랑\",\r\n  \"#ff9900\": \"주황\",\r\n  \"#0099ff\": \"하늘\",\r\n};\r\n\r\nconst FixedColorPicker = ({\r\n  initialColor = \"#ff0000\",\r\n  onColorChange,\r\n  presetColors = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#ff9900\", \"#0099ff\"],\r\n}) => {\r\n  const [color, setColor] = useState(initialColor);\r\n\r\n  const handleChangeComplete = (colorResult) => {\r\n    setColor(colorResult.hex);\r\n    if (onColorChange) {\r\n      onColorChange(colorResult.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"color-picker-container\">\r\n      <BlockPicker\r\n        className=\"custom-block-picker\"\r\n        width={120}\r\n        color={color}\r\n        colors={presetColors}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n\r\n      {/* 원하는 위치에 내가 만든 라벨 표시 */}\r\n      <div className=\"color-label\">\r\n        {colorLabels[color] ?? color /* 색상 이름 매핑, 없으면 hex */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FixedColorPicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAG;EAClB,SAAS,EAAE,IAAI;EACf,SAAS,EAAE,IAAI;EACf,SAAS,EAAE,IAAI;EACf,SAAS,EAAE,IAAI;EACf,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,YAAY,GAAG,SAAS;EACxBC,aAAa;EACbC,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AACvE,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACM,YAAY,CAAC;EAEhD,MAAMO,oBAAoB,GAAIC,WAAW,IAAK;IAC5CF,QAAQ,CAACE,WAAW,CAACC,GAAG,CAAC;IACzB,IAAIR,aAAa,EAAE;MACjBA,aAAa,CAACO,WAAW,CAACC,GAAG,CAAC;IAChC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCd,OAAA,CAACF,WAAW;MACVe,SAAS,EAAC,qBAAqB;MAC/BE,KAAK,EAAE,GAAI;MACXP,KAAK,EAAEA,KAAM;MACbQ,MAAM,EAAEX,YAAa;MACrBY,gBAAgB,EAAEP;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAGFrB,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAAP,kBAAA,GACzBN,WAAW,CAACO,KAAK,CAAC,cAAAD,kBAAA,cAAAA,kBAAA,GAAIC,KAAK,CAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BIJ,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}