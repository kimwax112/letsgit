{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\components\\\\Popup\\\\NextButtonWithPopup.jsx\",\n  _s = $RefreshSig$();\n// NextButtonWithPopup.jsx\n// 다음 버튼을 누를시 나오는 팝업 페이지 컴포넌트 \nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NextButtonUI from \"../NextButton/NextButton\";\nimport Popup from \"./Popup\"; // Popup 컴포넌트는 앞서 제공한 예제 참조\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NextButtonWithPopup = ({\n  selectedItems,\n  nextRoute\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const handleNextClick = () => {\n    if (selectedItems.length === 0) {\n      alert(\"항목을 선택해주세요.\");\n      return;\n    }\n    setIsPopupOpen(true);\n  };\n  const handleConfirm = () => {\n    setIsPopupOpen(false);\n    navigate(nextRoute); // 원하는 다음 페이지 경로\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NextButtonUI, {\n      onClick: handleNextClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"\\uC120\\uD0DD\\uB41C \\uD56D\\uBAA9:\",\n      onCancel: () => setIsPopupOpen(false),\n      onConfirm: handleConfirm,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NextButtonWithPopup, \"y2XzwTsFxgJ/Q+w7pmK6BVECAL4=\", false, function () {\n  return [useNavigate];\n});\n_c = NextButtonWithPopup;\nexport default NextButtonWithPopup;\nvar _c;\n$RefreshReg$(_c, \"NextButtonWithPopup\");","map":{"version":3,"names":["React","useState","useNavigate","NextButtonUI","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","NextButtonWithPopup","selectedItems","nextRoute","_s","navigate","isPopupOpen","setIsPopupOpen","handleNextClick","length","alert","handleConfirm","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onCancel","onConfirm","map","item","index","_c","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/components/Popup/NextButtonWithPopup.jsx"],"sourcesContent":["// NextButtonWithPopup.jsx\r\n// 다음 버튼을 누를시 나오는 팝업 페이지 컴포넌트 \r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NextButtonUI from \"../NextButton/NextButton\";\r\nimport Popup from \"./Popup\"; // Popup 컴포넌트는 앞서 제공한 예제 참조\r\n\r\nconst NextButtonWithPopup = ({ selectedItems, nextRoute }) => {\r\n  const navigate = useNavigate();\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n  const handleNextClick = () => {\r\n    if (selectedItems.length === 0) {\r\n      alert(\"항목을 선택해주세요.\");\r\n      return;\r\n    }\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    setIsPopupOpen(false);\r\n    navigate(nextRoute); // 원하는 다음 페이지 경로\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NextButtonUI onClick={handleNextClick} />\r\n      {isPopupOpen && (\r\n        <Popup\r\n          title=\"선택된 항목:\"\r\n          onCancel={() => setIsPopupOpen(false)}\r\n          onConfirm={handleConfirm}\r\n        >\r\n          <ul>\r\n            {selectedItems.map((item, index) => (\r\n              <li key={index}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </Popup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default NextButtonWithPopup;\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIN,aAAa,CAACO,MAAM,KAAK,CAAC,EAAE;MAC9BC,KAAK,CAAC,aAAa,CAAC;MACpB;IACF;IACAH,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,cAAc,CAAC,KAAK,CAAC;IACrBF,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,YAAY;MAACkB,OAAO,EAAEL;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCX,WAAW,iBACVR,OAAA,CAACF,KAAK;MACJsB,KAAK,EAAC,kCAAS;MACfC,QAAQ,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;MACtCa,SAAS,EAAET,aAAc;MAAAC,QAAA,eAEzBd,OAAA;QAAAc,QAAA,EACGV,aAAa,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BzB,OAAA;UAAAc,QAAA,EAAiBU;QAAI,GAAZC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA,eACD,CAAC;AAEP,CAAC;AAACb,EAAA,CAnCIH,mBAAmB;EAAA,QACNP,WAAW;AAAA;AAAA8B,EAAA,GADxBvB,mBAAmB;AAsCzB,eAAeA,mBAAmB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}