{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\pages\\\\Request\\\\Request\\\\ui\\\\MyEditor.jsx\",\n  _s = $RefreshSig$();\n// MyEditor.jsx 텍스트 편집기 \nimport React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\n\n// 플러그인 관련\nimport createToolbarPlugin, { Separator } from '@draft-js-plugins/static-toolbar';\nimport '@draft-js-plugins/static-toolbar/lib/plugin.css';\nimport { BoldButton, ItalicButton, UnderlineButton, CodeButton, HeadlineOneButton, HeadlineTwoButton } from '@draft-js-plugins/buttons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst toolbarPlugin = createToolbarPlugin();\nconst {\n  Toolbar\n} = toolbarPlugin;\nconst MyEditor = () => {\n  _s();\n  // Draft.js 에디터 상태\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n\n  // 플러그인 배열\n  const plugins = [toolbarPlugin];\n\n  // 임의로 \"모드 토글\" 버튼 클릭 시 동작하는 예시 (편집/읽기 전환 등)\n  const [editMode, setEditMode] = useState(true);\n  const toggleMode = () => {\n    setEditMode(!editMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px',\n      width: '800px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC0C1\\uC138\\uC124\\uBA85\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), editMode && /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: externalProps => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BoldButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ItalicButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UnderlineButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CodeButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Separator, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(HeadlineOneButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(HeadlineTwoButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#FFFFFF',\n        minHeight: 200,\n        border: '1px solid #eee',\n        padding: '10px',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        onChange: setEditorState,\n        plugins: plugins,\n        readOnly: !editMode // 편집 모드가 아닐 때 readOnly\n        ,\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MyEditor, \"8vqfIDv3QBV5gVHjW3mK+5Pt5/A=\");\n_c = MyEditor;\nexport default MyEditor;\nvar _c;\n$RefreshReg$(_c, \"MyEditor\");","map":{"version":3,"names":["React","useState","EditorState","Editor","createToolbarPlugin","Separator","BoldButton","ItalicButton","UnderlineButton","CodeButton","HeadlineOneButton","HeadlineTwoButton","jsxDEV","_jsxDEV","Fragment","_Fragment","toolbarPlugin","Toolbar","MyEditor","_s","editorState","setEditorState","createEmpty","plugins","editMode","setEditMode","toggleMode","style","border","padding","width","children","display","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","externalProps","backgroundColor","minHeight","marginTop","onChange","readOnly","placeholder","_c","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/pages/Request/Request/ui/MyEditor.jsx"],"sourcesContent":["// MyEditor.jsx 텍스트 편집기 \r\nimport React, { useState } from 'react';\r\nimport { EditorState } from 'draft-js';\r\nimport Editor from '@draft-js-plugins/editor';\r\n\r\n// 플러그인 관련\r\nimport createToolbarPlugin, { Separator } from '@draft-js-plugins/static-toolbar';\r\nimport '@draft-js-plugins/static-toolbar/lib/plugin.css';\r\n\r\n\r\nimport {\r\n  BoldButton,\r\n  ItalicButton,\r\n  UnderlineButton,\r\n  CodeButton,\r\n  HeadlineOneButton,\r\n  HeadlineTwoButton,\r\n} from '@draft-js-plugins/buttons';\r\n\r\nconst toolbarPlugin = createToolbarPlugin();\r\nconst { Toolbar } = toolbarPlugin;\r\n\r\nconst MyEditor = () => {\r\n  // Draft.js 에디터 상태\r\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\r\n\r\n  // 플러그인 배열\r\n  const plugins = [toolbarPlugin];\r\n\r\n  // 임의로 \"모드 토글\" 버튼 클릭 시 동작하는 예시 (편집/읽기 전환 등)\r\n  const [editMode, setEditMode] = useState(true);\r\n\r\n  const toggleMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '10px' , width: '800px' }}>\r\n      {/* 상단 제목 영역 */}\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 10 }}>\r\n        <h3>상세설명</h3>\r\n      </div>\r\n\r\n      {/* Static Toolbar (플러그인) */}\r\n      {editMode && (\r\n        <Toolbar>\r\n          {(externalProps) => (\r\n            <>\r\n              <BoldButton {...externalProps} />\r\n              <ItalicButton {...externalProps} />\r\n              <UnderlineButton {...externalProps} />\r\n              <CodeButton {...externalProps} />\r\n              <Separator {...externalProps} />\r\n              <HeadlineOneButton {...externalProps} />\r\n              <HeadlineTwoButton {...externalProps} />\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      )}\r\n\r\n      {/* 에디터 영역 */}\r\n      <div style={{backgroundColor:'#FFFFFF', minHeight: 200, border: '1px solid #eee', padding: '10px', marginTop: 10 }}>\r\n        <Editor\r\n          editorState={editorState}\r\n          onChange={setEditorState}\r\n          plugins={plugins}\r\n          readOnly={!editMode} // 편집 모드가 아닐 때 readOnly\r\n          placeholder=\"내용을 입력하세요...\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditor;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAOC,MAAM,MAAM,0BAA0B;;AAE7C;AACA,OAAOC,mBAAmB,IAAIC,SAAS,QAAQ,kCAAkC;AACjF,OAAO,iDAAiD;AAGxD,SACEC,UAAU,EACVC,YAAY,EACZC,eAAe,EACfC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,QACZ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,aAAa,GAAGZ,mBAAmB,CAAC,CAAC;AAC3C,MAAM;EAAEa;AAAQ,CAAC,GAAGD,aAAa;AAEjC,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,MAAMC,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC;;EAE/E;EACA,MAAMC,OAAO,GAAG,CAACP,aAAa,CAAC;;EAE/B;EACA,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACvBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE,MAAM;MAAGC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAEzElB,OAAA;MAAKc,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAH,QAAA,eACjFlB,OAAA;QAAAkB,QAAA,EAAI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAGLd,QAAQ,iBACPX,OAAA,CAACI,OAAO;MAAAc,QAAA,EACJQ,aAAa,iBACb1B,OAAA,CAAAE,SAAA;QAAAgB,QAAA,gBACElB,OAAA,CAACP,UAAU;UAAA,GAAKiC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCzB,OAAA,CAACN,YAAY;UAAA,GAAKgC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnCzB,OAAA,CAACL,eAAe;UAAA,GAAK+B;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtCzB,OAAA,CAACJ,UAAU;UAAA,GAAK8B;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCzB,OAAA,CAACR,SAAS;UAAA,GAAKkC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChCzB,OAAA,CAACH,iBAAiB;UAAA,GAAK6B;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCzB,OAAA,CAACF,iBAAiB;UAAA,GAAK4B;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACxC;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACV,eAGDzB,OAAA;MAAKc,KAAK,EAAE;QAACa,eAAe,EAAC,SAAS;QAAEC,SAAS,EAAE,GAAG;QAAEb,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEa,SAAS,EAAE;MAAG,CAAE;MAAAX,QAAA,eACjHlB,OAAA,CAACV,MAAM;QACLiB,WAAW,EAAEA,WAAY;QACzBuB,QAAQ,EAAEtB,cAAe;QACzBE,OAAO,EAAEA,OAAQ;QACjBqB,QAAQ,EAAE,CAACpB,QAAS,CAAC;QAAA;QACrBqB,WAAW,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlDID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}