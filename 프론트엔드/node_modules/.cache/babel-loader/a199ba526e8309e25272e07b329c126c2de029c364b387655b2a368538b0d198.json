{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\components\\\\ImageUploader\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\n// ImageUploader.jsx\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled.div`\n\n  background-color : white;\n  border: 1px dashed #ccc;\n  border-radius: 10px;\n  display: flex;\n  padding: 20px;\n  width: 600px; /* 필요에 따라 조정 */\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-left: 22%;\n`;\n_c = UploadContainer;\nconst DropArea = styled.div`\n  width: 150px;\n  height: 150px;\n  background-color:rgb(235, 235, 235);\n  border: 1px solid #eee;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 40px; /* '+' 기호가 크게 보이도록 */\n`;\n_c2 = DropArea;\nconst FileList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  max-height: 150px; /* 스크롤이 필요한 경우 */\n  overflow-y: auto;\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c3 = FileList;\nconst FileItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fafafa;\n  padding: 5px 10px;\n  border-radius: 4px;\n`;\n_c4 = FileItem;\nconst FileName = styled.span`\n  flex: 1;\n`;\n_c5 = FileName;\nconst FileSize = styled.span`\n  color: #999;\n  margin: 0 10px;\n`;\n_c6 = FileSize;\nconst RemoveButton = styled.button`\n  border: none;\n  background: none;\n  color: red;\n  font-size: 16px;\n  cursor: pointer;\n`;\n_c7 = RemoveButton;\nconst ImageUploader = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    // 파일 정보를 간단히 { name, size } 형태로 변환\n    const newFiles = selectedFiles.map(file => ({\n      name: file.name,\n      size: file.size\n    }));\n    setFiles([...files, ...newFiles]);\n  };\n  const removeFile = index => {\n    const updated = [...files];\n    updated.splice(index, 1);\n    setFiles(updated);\n  };\n\n  // KB로 단순 변환 (1 KB = 1024 바이트)\n  const formatSize = size => {\n    const kb = Math.round(size / 1024);\n    return `${kb} KB`;\n  };\n\n  // 숨겨진 input에 접근하기 위한 ref or id\n  const handleClickDropArea = () => {\n    document.getElementById(\"fileInput\").click();\n  };\n  return /*#__PURE__*/_jsxDEV(UploadContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DropArea, {\n      onClick: handleClickDropArea,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"fileInput\",\n      type: \"file\",\n      multiple: true,\n      style: {\n        display: \"none\"\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {\n      children: files.map((file, idx) => /*#__PURE__*/_jsxDEV(FileItem, {\n        children: [/*#__PURE__*/_jsxDEV(FileName, {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FileSize, {\n          children: formatSize(file.size)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RemoveButton, {\n          onClick: () => removeFile(idx),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c8 = ImageUploader;\nexport default ImageUploader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"DropArea\");\n$RefreshReg$(_c3, \"FileList\");\n$RefreshReg$(_c4, \"FileItem\");\n$RefreshReg$(_c5, \"FileName\");\n$RefreshReg$(_c6, \"FileSize\");\n$RefreshReg$(_c7, \"RemoveButton\");\n$RefreshReg$(_c8, \"ImageUploader\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","UploadContainer","div","_c","DropArea","_c2","FileList","ul","_c3","FileItem","li","_c4","FileName","span","_c5","FileSize","_c6","RemoveButton","button","_c7","ImageUploader","_s","files","setFiles","handleFileChange","e","selectedFiles","Array","from","target","newFiles","map","file","name","size","removeFile","index","updated","splice","formatSize","kb","Math","round","handleClickDropArea","document","getElementById","click","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","multiple","style","display","onChange","idx","_c8","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/components/ImageUploader/ImageUploader.jsx"],"sourcesContent":["// ImageUploader.jsx\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UploadContainer = styled.div`\r\n\r\n  background-color : white;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 20px;\r\n  width: 600px; /* 필요에 따라 조정 */\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n  margin-left: 22%;\r\n`;\r\n\r\nconst DropArea = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  background-color:rgb(235, 235, 235);\r\n  border: 1px solid #eee;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  font-size: 40px; /* '+' 기호가 크게 보이도록 */\r\n`;\r\n\r\nconst FileList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  max-height: 150px; /* 스크롤이 필요한 경우 */\r\n  overflow-y: auto;\r\n  width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst FileItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #fafafa;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst FileName = styled.span`\r\n  flex: 1;\r\n`;\r\n\r\nconst FileSize = styled.span`\r\n  color: #999;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst RemoveButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  color: red;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ImageUploader = () => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    // 파일 정보를 간단히 { name, size } 형태로 변환\r\n    const newFiles = selectedFiles.map((file) => ({\r\n      name: file.name,\r\n      size: file.size,\r\n    }));\r\n    setFiles([...files, ...newFiles]);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    const updated = [...files];\r\n    updated.splice(index, 1);\r\n    setFiles(updated);\r\n  };\r\n\r\n  // KB로 단순 변환 (1 KB = 1024 바이트)\r\n  const formatSize = (size) => {\r\n    const kb = Math.round(size / 1024);\r\n    return `${kb} KB`;\r\n  };\r\n\r\n  // 숨겨진 input에 접근하기 위한 ref or id\r\n  const handleClickDropArea = () => {\r\n    document.getElementById(\"fileInput\").click();\r\n  };\r\n\r\n  return (\r\n    <UploadContainer>\r\n      {/* 왼쪽 영역: 이미지 업로드 박스 */}\r\n      <DropArea onClick={handleClickDropArea}>\r\n        +\r\n      </DropArea>\r\n      <input\r\n        id=\"fileInput\"\r\n        type=\"file\"\r\n        multiple\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n      />\r\n\r\n      {/* 오른쪽 영역: 업로드된 파일 목록 */}\r\n      <FileList>\r\n        {files.map((file, idx) => (\r\n          <FileItem key={idx}>\r\n            <FileName>{file.name}</FileName>\r\n            <FileSize>{formatSize(file.size)}</FileSize>\r\n            <RemoveButton onClick={() => removeFile(idx)}>x</RemoveButton>\r\n          </FileItem>\r\n        ))}\r\n      </FileList>\r\n    </UploadContainer>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}