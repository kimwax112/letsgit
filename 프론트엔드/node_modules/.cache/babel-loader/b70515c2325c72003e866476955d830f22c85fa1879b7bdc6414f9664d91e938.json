{"ast":null,"code":"var _jsxFileName = \"D:\\\\ex2.5\\\\03.14\\\\letsgit\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { uploadImage } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = ({\n  onUploadSuccess\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"파일을 선택하세요!\");\n      return;\n    }\n    try {\n      await uploadImage(file);\n      alert(\"이미지 업로드 성공!\");\n      onUploadSuccess(); // 업로드 후 목록 갱신\n    } catch (error) {\n      alert(\"이미지 업로드 실패!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["useState","uploadImage","jsxDEV","_jsxDEV","ImageUpload","onUploadSuccess","_s","file","setFile","handleFileChange","e","target","files","handleUpload","alert","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ex2.5/03.14/letsgit/프론트엔드/src/components/ImageUpload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { uploadImage } from \"../services/api\";\r\n\r\nconst ImageUpload = ({ onUploadSuccess }) => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert(\"파일을 선택하세요!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await uploadImage(file);\r\n      alert(\"이미지 업로드 성공!\");\r\n      onUploadSuccess(); // 업로드 후 목록 갱신\r\n    } catch (error) {\r\n      alert(\"이미지 업로드 실패!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>이미지 업로드</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,IAAI,EAAE;MACTO,KAAK,CAAC,YAAY,CAAC;MACnB;IACF;IAEA,IAAI;MACF,MAAMb,WAAW,CAACM,IAAI,CAAC;MACvBO,KAAK,CAAC,aAAa,CAAC;MACpBT,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdD,KAAK,CAAC,aAAa,CAAC;IACtB;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDnB,OAAA;MAAQoB,OAAO,EAAEV,YAAa;MAAAG,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BIF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}